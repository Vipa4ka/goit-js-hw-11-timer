{"version":3,"sources":["index.js"],"names":["CountdownTimer","targetDate","selector","refs","days","document","querySelector","hours","mins","secs","clockface","start","setInterval","startTime","Date","now","deltaTime","time","getTimerComponent","updateClockface","pad","Math","floor","value","String","padStart","textContent","timer"],"mappings":";AA0CA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1CMA,IAAAA,EAAAA,WACoC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,SAAY,EAAA,KAAA,GAC7BD,KAAAA,WAAaA,EACbC,KAAAA,SAAWA,EACXC,KAAAA,KAAO,CACRC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,uBAC7BI,UAAWL,SAASC,cAAc,WAEjCK,KAAAA,QA+Bb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA7BY,MAAA,WAAA,IAAA,EAAA,KACJC,YAAY,WACFC,IAAAA,EAAYC,KAAKC,MACjBC,EAAY,EAAKf,WAAaY,EAC9BI,EAAO,EAAKC,kBAAkBF,GACpC,EAAKG,gBAAgBF,OAwBjC,CAAA,IAAA,oBApBsBA,MAAAA,SAAAA,GAKX,MAAA,CAAEb,KAJI,KAAKgB,IAAIC,KAAKC,MAAML,EAAQ,QAI1BV,MAHD,KAAKa,IAAIC,KAAKC,MAAOL,EAAQ,MAAyB,OAG9CT,KAFT,KAAKY,IAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MAElCR,KADf,KAAKW,IAAIC,KAAKC,MAAOL,EAAQ,IAAc,SAgB5D,CAAA,IAAA,MAZQM,MAAAA,SAAAA,GACGC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAWrC,CAAA,IAAA,kBAT8C,MAAA,SAAA,GAAzBrB,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC3BN,KAAAA,KAAKC,KAAKsB,YAAiBtB,GAAAA,OAAAA,GAC3BD,KAAAA,KAAKI,MAAMmB,YAAgBnB,GAAAA,OAAAA,GAC3BJ,KAAAA,KAAKK,KAAKkB,YAAgBlB,GAAAA,OAAAA,GAC1BL,KAAAA,KAAKM,KAAKiB,YAAgBjB,GAAAA,OAAAA,OAKvC,EA1CMT,GA0CA2B,EAAQ,IAAI3B,EAAe,CAC7BE,SAAU,WACVD,WAAY,IAAIa,KAAK","file":"src.cce4556a.js","sourceRoot":"..\\src","sourcesContent":["class CountdownTimer {\r\n    constructor({ targetDate, selector }) {        \r\n        this.targetDate = targetDate;\r\n        this.selector = selector;\r\n        this.refs = {\r\n            days: document.querySelector('[data-value=\"days\"]'),\r\n            hours: document.querySelector('[data-value=\"hours\"]'),\r\n            mins: document.querySelector('[data-value=\"mins\"]'),\r\n            secs: document.querySelector('[data-value=\"secs\"]'),\r\n            clockface: document.querySelector('.timer'),\r\n        };\r\n        this.start();\r\n    }\r\n    start() {        \r\n        setInterval(() => {            \r\n            const startTime = Date.now();\r\n            const deltaTime = this.targetDate - startTime;          \r\n            const time = this.getTimerComponent(deltaTime);\r\n            this.updateClockface(time);            \r\n        });   \r\n    };\r\n\r\n    getTimerComponent(time) {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));    \r\n    return { days, hours, mins, secs };\r\n    };\r\n\r\n    pad(value) {\r\n    return String(value).padStart(2, '0');\r\n    };\r\n    updateClockface({days, hours, mins, secs}){\r\n        this.refs.days.textContent = `${days}`;\r\n        this.refs.hours.textContent =`${hours}`;\r\n        this.refs.mins.textContent =`${mins}`; \r\n        this.refs.secs.textContent =`${secs}`; \r\n    };\r\n\r\n};\r\n\r\nconst timer = new CountdownTimer({    \r\n    selector: '#timer-1',\r\n    targetDate: new Date('Jul 17, 2021')\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}