{"version":3,"sources":["index.js"],"names":["clockface","document","querySelector","q","CountdownTimer","onTick","targetDate","selector","setInterval","startTime","Date","now","deltaTime","time","getTimerComponent","days","pad","Math","floor","hours","mins","secs","value","String","padStart","timer","updateClockface","textContent","start"],"mappings":";AAwCC,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAxCD,IAAMA,EAAYC,SAASC,cAAc,UACnCC,EAAIF,SAASC,cAAc,UAE3BE,EAAAA,WAC4C,SAAA,EAAA,GAAhCC,IAAAA,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,SAAY,EAAA,KAAA,GACrCF,KAAAA,OAASA,EACTC,KAAAA,WAAaA,EACbC,KAAAA,SAAWA,EAiCvB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA/BW,MAAA,WAAA,IAAA,EAAA,KACJC,YAAY,WACFC,IAAAA,EAAYC,KAAKC,MACjBC,EAAY,EAAKN,WAAaG,EAC9BI,EAAO,EAAKC,kBAAkBF,GACpC,EAAKP,OAAOQ,IACb,OAyBV,CAAA,IAAA,oBAtBqBA,MAAAA,SAAAA,GAKX,MAAA,CAAEE,KAJI,KAAKC,IAAIC,KAAKC,MAAML,EAAQ,QAI1BM,MAHD,KAAKH,IAAIC,KAAKC,MAAOL,EAAQ,MAAyB,OAG9CO,KAFT,KAAKJ,IAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MAElCQ,KADf,KAAKL,IAAIC,KAAKC,MAAOL,EAAQ,IAAc,SAkB3D,CAAA,IAAA,MAdOS,MAAAA,SAAAA,GACGC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAapC,EArCKpB,GA4BAqB,EAAQ,IAAIrB,EAAe,CAC7BC,OAAQqB,EACRnB,SAAU,WACVD,WAAY,IAAII,KAAK,kBAIzB,SAASgB,EAA6C,GAA3BX,IAAAA,EAAAA,EAAAA,KAAMI,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC1CrB,EAAU2B,YAAiBZ,GAAAA,OAAAA,EAAQI,KAAAA,OAAAA,EAASC,KAAAA,OAAAA,EAAQC,KAAAA,OAAAA,GAHxDI,EAAMG","file":"src.86ef6fb7.js","sourceRoot":"..\\src","sourcesContent":["const clockface = document.querySelector('.timer')\r\nconst q = document.querySelector('.timer')\r\n\r\nclass CountdownTimer {\r\n    constructor({ onTick, targetDate, selector }) {\r\n        this.onTick = onTick;\r\n        this.targetDate = targetDate;\r\n        this.selector = selector;        \r\n    }\r\n    start() {        \r\n        setInterval(() => {            \r\n            const startTime = Date.now();\r\n            const deltaTime = this.targetDate - startTime;          \r\n            const time = this.getTimerComponent(deltaTime);\r\n            this.onTick(time);            \r\n        }, 1000);   \r\n    };\r\n\r\n    getTimerComponent(time) {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));    \r\n    return { days, hours, mins, secs };\r\n    };\r\n\r\n    pad(value) {\r\n    return String(value).padStart(2, '0');\r\n    };     \r\n};\r\n\r\nconst timer = new CountdownTimer({\r\n    onTick: updateClockface,\r\n    selector: '#timer-1',\r\n    targetDate: new Date('Jul 17, 2021')\r\n});\r\ntimer.start();\r\n\r\nfunction updateClockface({ days, hours, mins, secs }) {\r\n    clockface.textContent = `${days}:${hours}:${mins}:${secs}`;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}